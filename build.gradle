plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


group 'codes.rayacode'
version '0.1'
version = '3.4.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs = [
            '-Xgcpolicy:gencon',
            '-Xmn512m',
            '-Xms1g',
            '-Xmx12g',

    ]
}
application {


    mainClass = 'codes.rayacode.lakeconverter.Launcher'


}



javafx {
    version = "23"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    platform = 'win'

}

dependencies {


    //implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    //implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    //implementation("ws.schild:jave-all-deps:3.4.0")
    implementation 'org.jetbrains:annotations:24.0.0'
    //implementation 'org.slf4j:slf4j-api:2.0.9'
    //implementation 'org.slf4j:slf4j-simple:2.0.11'
    implementation 'net.jthink:jaudiotagger:3.0.1'
    implementation 'org.apache.commons:commons-collections4:4.4'
   // implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.22.1'
    testImplementation  "org.testfx:testfx-core:4.0.17"
    testImplementation  'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    testImplementation  "org.testfx:testfx-junit5:4.0.17"
    testImplementation  group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
}

test {
    useJUnitPlatform()
}
processResources {
    filesMatching("**/*.properties") {
        expand(project.properties)
    }
}

jar {
    manifest {
        attributes('Implementation-Version': project.version)
    }
}

shadowJar {
    manifest.inheritFrom project.tasks.jar.manifest
    archiveClassifier = 'all'
}

build.dependsOn(shadowJar)